/// <reference types="svelte" />
import type { Updater, Writable } from 'svelte/store';
export type ChangeFn<T> = (args: {
    curr: T;
    next: T;
}) => T;
export declare const overridable: <T>(store: Writable<T>, onChange?: ChangeFn<T> | undefined) => {
    update: (updater: Updater<T>, sideEffect?: ((newValue: T) => void) | undefined) => void;
    set: (this: void, value: T) => void;
    subscribe(this: void, run: import("svelte/store").Subscriber<T>, invalidate?: import("svelte/store").Invalidator<T> | undefined): import("svelte/store").Unsubscriber;
};
